<!--
  * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
  *
  * This file is part of the Kitodo project.
  *
  * It is licensed under GNU General Public License version 3 or later.
  *
  * For the full copyright and license information, please read the
  * GPL3-License.txt file that was distributed with this source code.
  -->

<ui:composition
    template="/WEB-INF/templates/baseEditView.xhtml"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:p="http://primefaces.org/ui">
    <f:metadata>
        <f:viewParam name="id" value="#{ClientForm.clientId}"/>
        <f:viewAction action="#{ClientForm.loadClient}"/>
    </f:metadata>

    <ui:param name="isEditMode"
              value="#{ClientForm.client.id ne null and SecurityAccessController.isAdminOrHasAuthorityGlobalOrForClient('editClient',ClientForm.client.id)}"/>
    <ui:param name="isCreateMode"
              value="#{ClientForm.client.id eq null and SecurityAccessController.isAdminOrHasAuthorityGlobal('addClient')}"/>
    <ui:param name="isViewMode"
              value="#{not isEditMode and not isCreateMode}"/>

    <ui:define name="contentHeader">
        <h:outputScript name="js/save.js" target="body" />
        <script>
            window.onload = function () {checkForm('editForm')};
        </script>
        <h3>
            <h:outputText value="#{msgs.clientEdit}"
                          rendered="#{isEditMode}"/>
            <h:outputText value="#{msgs.clientNew}"
                          rendered="#{isCreateMode}"/>
            <h:outputText value="#{msgs.clientView}"
                          rendered="#{isViewMode}"/>
        </h3>
        <p:commandButton id="saveButton"
                         rendered="#{isEditMode || isCreateMode}"
                         widgetVar="save"
                         value="#{msgs.save}"
                         action="#{ClientForm.save}"
                         update="notifications"
                         icon="fa fa-floppy-o fa-lg"
                         iconPos="right"
                         disabled="#{ClientForm.saveDisabled}"
                         onclick="setConfirmUnload(false);PF('notifications').renderMessage({'summary':'#{msgs.clientSaving}','detail':'#{msgs.youWillBeRedirected}','severity':'info'});"/>
        <p:commandButton id="saveButtonToggler"
                         actionListener="#{ClientForm.setSaveDisabled(false)}"
                         update="saveButton"
                         style="display:none;"/>
        <p:button value="#{msgs.cancel}" outcome="#{NavigationFilter.getBacklink()}" onclick="setConfirmUnload(false);"
                  icon="fa fa-times fa-lg" iconPos="right" styleClass="secondary"/>
    </ui:define>

    <ui:define name="pageTabView">
        <p:tabView id="clientsTabView">
            <p:tab id="clientsTab" title="#{msgs.client}">
                <p:panelGrid id="clientEdit-grid" columns="2" layout="grid">
                    <p:row>
                        <div>
                            <p:outputLabel for="nameInput" value="#{msgs.name}"/>
                            <p:inputText id="nameInput"
                                         class="input"
                                         disabled="#{isViewMode}"
                                         placeholder="#{msgs.name}"
                                         value="#{ClientForm.client.name}"
                                         required="true"/>
                        </div>
                    </p:row>
                </p:panelGrid>
            </p:tab>
        </p:tabView>
    </ui:define>

    <ui:define name="breadcrumbs">
        <li><h:link value="#{msgs.desktop}" outcome="desktop"/></li>
        <li><h:link value="#{msgs.users}" outcome="users"/></li>
        <li>
            <a href="">
                <ui:fragment rendered="#{isEditMode}">
                    #{msgs.clientEdit}
                </ui:fragment>
                <ui:fragment rendered="#{isCreateMode}">
                    #{msgs.clientNew}
                </ui:fragment>
                <ui:fragment rendered="#{isViewMode}">
                    #{msgs.clientView}
                </ui:fragment>
            </a>
        </li>
    </ui:define>
</ui:composition>
